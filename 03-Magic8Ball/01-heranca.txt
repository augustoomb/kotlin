No Kotlin, todas as classes são finais por padrão, o que significa que não é possível estendê-las. É necessário definir as relações entre elas. 
Na superclasse SmartDevice, adicione uma palavra-chave open antes da palavra-chave class para que ela possa ser estendida:

	open class SmartDevice(val name: String, val category: String) { //open informa ao compilador que essa classe pode ser estendida.
		...
	}




----------------------------------

class SmartTvDevice(deviceName: String, deviceCategory: String) :
    SmartDevice(name = deviceName, category = deviceCategory) { // super classe

    var speakerVolume = 2
        set(value) {
            if (value in 0..100) {
                field = value
            }
        }

     var channelNumber = 1
        set(value) {
            if (value in 0..200) {
                field = value
            }
        }

    fun increaseSpeakerVolume() {
        speakerVolume++
        println("Speaker volume increased to $speakerVolume.")
    } 
}


A definição do constructor para SmartTvDevice não especifica se as propriedades são mutáveis ou imutáveis. Isso significa que os parâmetros deviceName e deviceCategory são apenas parâmetros do constructor em vez de propriedades de classe. Eles não podem ser usados na classe, só transmitidos ao construtor da superclasse.
Para que deviceName e deviceCategory se tornem propriedades da classe (e possam ser acessados em qualquer lugar dentro dela), você precisa adicionar a palavra-chave val (para imutável) ou var (para mutável) antes dos nomes dos parâmetros.



=======================================================
COMPOSIÇÃO
